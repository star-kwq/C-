/*Description
键盘输入整数n(n不大于5)，并输入一个n*n的矩阵，将其转置并输出。

说明：

所谓转职，就是行变列，列变行，如

1 2 3                                         1 4 7

4 5 6             转置后变为           2 5 8

7 8 9                                         3 6 9

注意：只申请一个二维数组

Input
Output
Sample Input
3
1 2 3
4 5 6
7 8 9
Sample Output
1 4 7
2 5 8
3 6 9*/
#include<stdio.h>
int main()
{
	int a[5][5];
	int i,j,t,n;
	scanf("%d",&n);
	for(i=0;i<=n-1;i++)
		for(j=0;j<=n-1;j++)
		{
			scanf("%d",&a[i][j]);
		}
	for(i=0;i<=n-1;i++)
		for(j=i;j<=n-1;j++)
		{
			t=a[i][j];
			a[i][j]=a[j][i];
			a[j][i]=t;
		}
	for(i=0;i<=n-1;i++)
	{
		for(j=0;j<n-1;j++)
		{
			printf("%d ",a[i][j]);
		}
		printf("%d\n",a[i][n-1]);
	}
	return 0;
}
-----------------------------------------------------------------------------------
/*Description
有两个分别是a*b(a行b列)和b*c（b行c列）的矩阵，相乘后是一个a*c的矩阵，a、b、c及矩阵数据均由键盘输入，a、b、c均不超过10，请编程输出相乘后的矩阵。

下面2*3矩阵和3*2矩阵相乘的一个例子：

1  2  3                         1  2                     1*1+2*3+3*5                          1*2+2*4+3*6                   22          28

                       *          3  4            =                                                                                    =

4  5  6                         5  6                     4*1+5*3+6*5                           4*2+5*4+6*6                  49           64

Input
Output
Sample Input
2 3
1 2 3
4 5 6
3 2
1 2
3 4
5 6
Sample Output
22 28
49 64*/
#include<stdio.h>
int main()
{
	int x[10][10],y[10][10],z[10][10];
	int i,j,h,a,b,c,m=0;
	scanf("%d %d",&a,&b);
	for(i=0;i<=a-1;i++)
		for(j=0;j<=b-1;j++)
			scanf("%d",&x[i][j]);
	scanf("%d %d",&b,&c);
	for(i=0;i<=b-1;i++)
		for(j=0;j<=c-1;j++)
			scanf("%d",&y[i][j]);
	for(i=0;i<=a-1;i++)
		for(h=0;h<=c-1;h++)
		{
			for(j=0;j<=b-1;j++)
				m=m+x[i][j]*y[j][h];
			if(j==b)
			{
				z[i][h]=m;
				m=0;
			}
		}
	for(i=0;i<=a-1;i++)
	{
		for(j=0;j<c-1;j++)
			printf("%d ",z[i][j]);
		printf("%d\n",z[i][c-1]);
	}
	return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------------------
/*Description
键盘输入总共M个人，每人 N门课的成绩，求每科平均成绩及总平均成绩

Input
M行 N列的数组

Output
M N

每科平均成绩及总平均成绩

保留2位小数

Sample Input
5 3
90 90 90
80 80 70
80 80 80
70 80 76
74 73 82
Sample Output
78.80
80.60
79.60
79.67*/
#include<stdio.h>
int main()
{
	int x[10][10];
	float y[10][1],h=0,l;
	int i,j,k,m,n;
	scanf("%d %d",&m,&n);
	for(i=0;i<=m-1;i++)
		for(j=0;j<=n-1;j++)
			scanf("%d",&x[i][j]);
	for(j=0;j<=n-1;j++)
	{
		for(i=0;i<=m-1;i++)
			h=h+x[i][j];
		y[j][0]=h/m;
		h=0;
	}
	for(i=0;i<=m-1;i++)
		for(j=0;j<=n-1;j++)
			h=h+x[i][j];
	l=h/(m*n);
	for(i=0;i<=n-1;i++)
		printf("%.2f\n",y[i][0]);
	printf("%.2f\n",l);
	return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------------------
/*Description
输入一行英文句子，统计改句子中有多少个单词？（单词之间有空格）

Input
一行英文句子

Output
单词个数

Sample Input
How are you？
Sample Output
3*/
#include<stdio.h>
#include<string.h>
int main()
{
	char a[100];
	int i,n,x=1;
	gets(a);
	n=strlen(a);
	for(i=0;i<n;i++)
	{
		if(a[i]==' ')
			x=x+1;
	}
	printf("%d\n",x);
	return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------------------
/*Description
 输入一个字符串，将其中的小写字母留下，其他字符删去

Input
一个字符串

Output
新的字符串

Sample Input
ABCab C
Sample Output
ab*/
#include<stdio.h>
#include<string.h>
int main()
{
	char a[100],b[100]={0};
	int i,n,j,m=0;
	gets(a);
	n=strlen(a);
	for(j=0;j<n;j++)
	{	
		if(a[j]>=97&&a[j]<=122)	
		{
			b[m]=a[j];
			m=m+1;
		}
	}
	if(j==n)
		b[m]='\0';
	puts(b);
	return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------------------
/*Description
将字符数组中的字符串逆序并输出，设键盘输入字符数不超过20个。

Input
Output
Sample Input
abfgh
Sample Output
hgfba*/
#include<stdio.h>
#include<string.h>
int main()
{
	char a[21],m;
	int i,n;
	gets(a);
	n=strlen(a);
	for(i=0;i<n/2;i++)
	{	
		m=a[i];
		a[i]=a[n-1-i];
		a[n-1-i]=m;
	}
	puts(a);
	return 0;
}
----------------------------------------------------------------------------------------------------------------------------------------------------
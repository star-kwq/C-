#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define m 40
#define n 100
typedef struct
{
int flightnum;/*机号*/
char time[40];/*时间*/
char city[20];/*起降城市*/
int price;/*票价*/
int zhekou;/*折扣*/
int emptysit;/*空座*/

}Flightinfo;
typedef struct
{
Flightinfo Flight[m];
int length;
}FlList;
typedef struct
{
char name[20];/*乘客名*/
char ID[20];/*身份证*/
char phonenum[20];/*手机号*/
int flightnum;/*机号*/

}Reserved;
typedef struct
{
Reserved client[n];
int length;
}ReList;
void write()/*写文件*/
{
FILE *fp;
if((fp=fopen("flight_information.txt","w"))==NULL)
{
printf("写文件失败！\n");
exit(0);
}
fprintf(fp,"%d\n",15);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",1101,"12月21日.8:00->10:00","烟台->兰州",500,8,5);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",1201,"12月21日.7:00->10:00","烟台->上海",900,9,3);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",1301,"12月21日.9:00->10:00","烟台->郑州",300,9,4);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",1401,"12月21日.11:00->13:30","烟台->成都",600,10,2);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",1501,"12月21日.9:00->13:30","烟台->拉萨",1000,7,0);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",1601,"12月21日.14:00->15:00","烟台->郑州",300,8,3);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",1701,"12月21日.16:00->18:00","烟台->兰州",500,8,4);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",1801,"12月21日.16:30->18:30","烟台->上海",900,8,2);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",1901,"12月21日.22:00->23:50","烟台->成都",500,10,3);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",2001,"12月21日.2:00->6:00","烟台->拉萨",900,7,2);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",2101,"12月21日.6:00->8:00","烟台->兰州",500,8,2);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",2201,"12月21日.9:00->12:00","烟台->上海",900,9,4);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",2301,"12月21日.11:00->12:00","烟台->郑州",300,8,3);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",2401,"12月21日.13:00->15:30","烟台->成都",600,10,2);
fprintf(fp,"%4d %-30s %-15s %4d %4d %4d\n",2501,"12月21日.16:00->21:00","烟台->拉萨",1000,8,2);
fflush(fp);/*清空缓冲区*/

}
void write1()/*写文件*/
{
FILE *fp;
if((fp=fopen("reserve_information.txt","w"))==NULL)
{
printf("写文件1失败！\n");
exit(0);
}
fprintf(fp,"%d\n",0);
fflush(fp);/*清空缓冲区*/
}
void Welcome()
{
printf("***********************\n");
printf("**欢迎进入飞机订票系统*\n");
printf("***********************\n");
}
void F_Read(FlList *L1)
{
FILE *fp;
int i;
if((fp=fopen("flight_information.txt","r"))==NULL)/*读取航班信息*/
{
printf("失败！\n");
exit(0);
}
fscanf(fp,"%d",&(L1->length));
for(i=0;i<L1->length;i++)
{
fscanf(fp,"%d %30s %s %d %d %d",&(L1->Flight[i].flightnum),L1->Flight[i].time,L1->Flight[i].city,&(L1->Flight[i].price),&(L1->Flight[i].zhekou),&(L1->Flight[i].emptysit));
}
fclose(fp);
}
void R_Read(ReList *L2)
{
FILE *fp;
int k;
if((fp=fopen("reserve_information.txt","r"))==NULL)/*读取乘客信息*/
{
printf("读取reserve_information失败！\n");
exit(0);
}
fscanf(fp,"%d",&(L2->length));
if(L2->length==0)
return ;
for(k=0;k<L2->length;k++)
fscanf(fp,"%c %c %c %d",L2->client[k].name,L2->client[k].ID,L2->client[k].phonenum,&(L2->client[k].flightnum));
fclose(fp);
}
void FNsearch(FlList *L1)/*按照航班号查询*/
{
int t,i;
printf("请输入要查询的航班号\n");
scanf("%d",&t);
for(i=0;i<L1->length;i++)
if(L1->Flight[i].flightnum==t) break;
if(i==L1->length)
printf("不存在该航班\n");
else
{
printf("该航班信息如下：\n");
printf("航班号：%d\n   起降时间：%s\n  起降城市：%s\n   票价：%d\n   票价折扣：%d\n   空余座位：%d\n",L1->Flight[i].flightnum,L1->Flight[i].time,L1->Flight[i].city,L1->Flight[i].price,L1->Flight[i].zhekou,L1->Flight[i].emptysit);

}

}
void FCsearch(FlList *L1)
{
int i;
char  temp[20];
printf("请输入起降城市：\n");
scanf("%s",temp);
for(i=0;i<L1->length;i++)
if(strcmp(L1->Flight[i].city,temp)==0)
{
printf("符合条件航班信息如下：\n");
printf("航班号：%d\n   起降时间：%s\n  起降城市：%s\n   票价：%d\n   票价折扣：%d\n   空余座位：%d\n",L1->Flight[i].flightnum,L1->Flight[i].time,L1->Flight[i].city,L1->Flight[i].price,L1->Flight[i].zhekou,L1->Flight[i].emptysit);
}
}
void Fsearch(FlList *L1)
{
int k;
printf("请选择查询方式：\n");
printf("1.按照航班号查询\n");
printf("2.按照起降城市查询\n");
scanf("%d",&k);
switch(k)
{
case 1:FNsearch(L1);break;
case 2:FCsearch(L1);break;
default:printf("输入错误\n");break;
}
}
void Rsearch(ReList *L2)
{
int i;
char temp[20];
if(L2->length==0)
{
printf("当前订票人数为0，无法查询\n");
return ;
}
printf("请输入乘客证件号\n");
scanf("%s",temp);
for(i=0;i<L2->length;i++)
if(strcmp(L2->client[i].ID,temp)==0) break;/*已找到该乘客*/
if(i==L2->length) printf("不存在该乘客\n");
else
{
printf("该客户信息如下：\n");
printf("姓名：  %s\n  证件号： %s\n  电话：  %s\n    预定航班：%d\n",L2->client[i].name,L2->client[i].ID,L2->client[i].phonenum,L2->client[i].flightnum);
}
}
void Search(FlList *L1,ReList *L2)
{
int k;
printf("请选择查询信息：\n");
printf("1----航班信息\n");
printf("2----订票信息\n");
scanf("%d",&k);
switch(k)
{
case 1:Fsearch(L1);break;
case 2:Rsearch(L2);break;
default:printf("输入错误\n");break;
}
}
void Recommend(FlList *L1, int i)
{
int k;
printf("抱歉，该航班已满座\n");
for(k=0;k<L1->length;k++)
if((strcmp(L1->Flight[i].city,L1->Flight[k].city)==0)&&(k!=i)&&(L1->Flight[k].emptysit!=0))/*城市相同，不是同一列车，不满座*/
{
printf("你可以选择相似航班，航班信息如下：\n");
printf("航班号：%d\n   起降时间：%s\n  起降城市：%s\n   票价：%d\n   票价折扣：%d\n   空余座位：%d\n",L1->Flight[k].flightnum,L1->Flight[k].time,L1->Flight[k].city,L1->Flight[k].price,L1->Flight[k].zhekou,L1->Flight[k].emptysit);
}
}
void pay(FlList *L1,ReList *L2,int i)/*订票付费系统*/
{
FILE *fp1,*fp2;
int k;
printf("请输入乘客信息：\n");
printf("姓名\n");
scanf("%s",L2->client[L2->length].name);
printf("证件号：\n");
scanf("%s",L2->client[L2->length].ID);
printf("电话\n");
scanf("%s",L2->client[L2->length].phonenum);
L2->client[L2->length].flightnum=L1->Flight[i].flightnum;
printf("您需要支付票价%d元\n",L1->Flight[i].price*L1->Flight[i].zhekou/10);
L1->Flight[i].emptysit--;/*空座-1*/
L2->length++;
if((fp1=fopen("flight_information.txt","w"))==NULL)
{
printf("文件打开失败\n");
exit(0);
}
fprintf(fp1,"%d\n",L1->length);
for(i=0;i<L1->length;i++)
fprintf(fp1,"%d %s %s %d %d %d\n",L1->Flight[i].flightnum,L1->Flight[i].time,L1->Flight[i].city,L1->Flight[i].price,L1->Flight[i].zhekou,L1->Flight[i].emptysit);
fclose(fp1);
if((fp2=fopen("reserve_information.txt","w"))==NULL)
{
printf("文件打开失败\n");
exit(0);
}
fprintf(fp2,"%d\n",L2->length);
for(k=0;k<L2->length;k++)
fprintf(fp2,"%s %s %s %d\n",L2->client[k].name,L2->client[k].ID,L2->client[k].phonenum,L2->client[k].flightnum);
fclose(fp2);
printf("订票成功！\n");
}
void Reserve(FlList *L1,ReList *L2)
{
int i,t;
printf("请输入预定航班机号：\n");
scanf("%d",&t);
for(i=0;i<L1->length;i++)
if(L1->Flight[i].flightnum==t) break;/*已找到，前往付费*/
if(i==L1->length)
{
printf("不存在该航班\n");
return ;
}
if(L1->Flight[i].emptysit==0) Recommend(L1,i);/*找相似航班*/
else
pay(L1,L2,i);/*前往付费*/

}
void Withdraw(FlList *L1,ReList *L2)
{
FILE *fp1 ,*fp2;
int k,i;
char temp[20];
if(L2->length==0)
{
printf("操作错误\n");
return ;
}
printf("请输入乘客证件号：\n");
scanf("%s",temp);
for(k=0;k<L2->length;k++)
if(strcmp(temp,L2->client[k].ID)==0)break;
if(k==L2->length)
{
printf("该用户不存在\n");
return ;
}
for(i=0;i<L1->length;i++)
if(L2->client[k].flightnum==L1->Flight[i].flightnum)break;
L1->Flight[i].emptysit++;
for(;k<L2->length-1;k++)
L2->client[k]=L2->client[k+1];
L2->length--;
if((fp1=fopen("flight_information.txt","w"))==NULL)
{
printf("文件打开失败\n");
exit(0);
}
fprintf(fp1,"%d\n",L1->length);
for(i=0;i<L1->length;i++)
fprintf(fp1,"%d %s %s %d %d %d\n",L1->Flight[i].flightnum,L1->Flight[i].time,L1->Flight[i].city,L1->Flight[i].price,L1->Flight[i].zhekou,L1->Flight[i].emptysit);
fclose(fp1);
if((fp2=fopen("reserve_information.txt","w"))==NULL)
{
printf("文件打开失败\n");
exit(0);
}
fprintf(fp2,"%d\n",L2->length);
for(k=0;k<L2->length;k++)
fprintf(fp2,"%s %s  %s  %d\n",L2->client[k].name,L2->client[k].ID,L2->client[k].phonenum,L2->client[k].flightnum);
fclose(fp2);
printf("退票成功~！\n");

}
void Fadd(FlList *L1)/*新增线路*/
{
FILE *fp1;
int i;
printf("请输入新增航班信息：\n");
printf("航班号\n");
scanf("%d",&(L1->Flight[L1->length].flightnum));
printf("起航时间\n");
scanf("%s",&(L1->Flight[L1->length].time));
printf("起降城市\n");
scanf("%s",&(L1->Flight[L1->length].city));
printf("票价\n");
scanf("%d",&(L1->Flight[L1->length].price));
printf("折扣\n");
scanf("%d",&(L1->Flight[L1->length].zhekou));
printf("空余座位数\n");
scanf("%d",&(L1->Flight[L1->length].emptysit));
L1->length++;
if((fp1=fopen("flight_information.txt","w"))==NULL)
{
printf("文件打开失败\n");
exit(0);
}
fprintf(fp1,"%d\n",L1->length);
for(i=0;i<L1->length;i++)
fprintf(fp1,"%d %s %s %d %d %d\n",L1->Flight[i].flightnum,L1->Flight[i].time,L1->Flight[i].city,L1->Flight[i].price,L1->Flight[i].zhekou,L1->Flight[i].emptysit);
fclose(fp1);
}
void Fcan(FlList *L1)/*取消航线*/
{
FILE *fp1;
int i,t;
printf("请输入要取消的机号\n");
scanf("%d",&t);
for(i=0;i<L1->length;i++)
if(L1->Flight[i].flightnum==t)break;
if(i=L1->length)
{
printf("不存在该航班！\n");
return ;
}
for(;i<L1->length-1;i++)
L1->Flight[i]=L1->Flight[i+1];
L1->length--;
if((fp1=fopen("flight_information.txt","w"))==NULL)
{
printf("文件打开失败\n");
exit(0);
}
fprintf(fp1,"%d\n",L1->length);
for(i=0;i<L1->length;i++)
fprintf(fp1,"%d %s %s %d %d %d\n",L1->Flight[i].flightnum,L1->Flight[i].time,L1->Flight[i].city,L1->Flight[i].price,L1->Flight[i].zhekou,L1->Flight[i].emptysit);
fclose(fp1);
}
void Fchg(FlList *L1)/*修改航班*/
{
FILE *fp1;
int i,t;
printf("请输入要修改的机号\n");
scanf("%d",&t);
for(i=0;i<L1->length;i++)
if(L1->Flight[i].flightnum==t)break;
if(i==L1->length)
{
printf("不存在该航班！\n");
return ;
}
printf("请输入新的起降时间\n");
scanf("%s",L1->Flight[i].time);
printf("请输入新的票价\n");
scanf("%d",&(L1->Flight[i].price));
printf("请输入新的票价折扣\n");
scanf("%d",&(L1->Flight[i].zhekou));
if((fp1=fopen("flight_information.txt","w"))==NULL)
{
printf("文件打开失败\n");
exit(0);
}
fprintf(fp1,"%d\n",L1->length);
for(i=0;i<L1->length;i++)
fprintf(fp1,"%d %s %s %d %d %d\n",L1->Flight[i].flightnum,L1->Flight[i].time,L1->Flight[i].city,L1->Flight[i].price,L1->Flight[i].zhekou,L1->Flight[i].emptysit);
fclose(fp1);
}
void caidan(FlList *L1)
{
int k;
printf("请选择要执行的功能\n");
printf("1---增加航班\n");
printf("2---取消航班\n");
printf("3---改动信息\n");
scanf("%d",&k);
switch(k)
{
case 1:Fadd(L1);break;
case 2:Fcan(L1);break;
case 3:Fchg(L1);break;
}
}
int main()
{
int k;
FlList Flist;
ReList Rlist;
Flist.length=0;
Rlist.length=0;
write();
write1();
Welcome();
F_Read(&Flist);
R_Read(&Rlist);
do
{
printf("1------查询--------\n");
printf("2------订票--------\n");
printf("3------退票--------\n");
printf("4------修改--------\n");
printf("5------退出--------\n");
scanf("%d",&k);
switch(k)
{
case 1:Search(&Flist,&Rlist);break;
case 2:Reserve(&Flist,&Rlist);break;
case 3:Withdraw(&Flist,&Rlist);break;
case 4:caidan(&Flist);break;
case 5:break;
default:printf("无此功能，请重新输入！\n");
}
}while(k!=5);
}